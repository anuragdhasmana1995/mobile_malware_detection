#!/usr/bin/env python

import psycopg2, argparse, getpass, json, os

def main():
  #----------------------------------------------------------------------
  # Arguments
  #----------------------------------------------------------------------

  parser = argparse.ArgumentParser(description='Correct the path column \
      of malware in the database.', add_help=False)
  parser.add_argument('--help', action='help', help='show this help \
      message.')
  parser.add_argument('-h', metavar='host', type=str, required=True)
  parser.add_argument('-d', metavar='database', type=str, required=True)
  parser.add_argument('-u', metavar='username', type=str, required=True)
  parser.add_argument('--path', metavar='path', type=str, required=True)
  args = parser.parse_args()

  passwd = getpass.getpass()

  #----------------------------------------------------------------------
  # Database
  #----------------------------------------------------------------------
  try:
    sql = 'host=%s dbname=%s user=%s password=%s' % \
        (args.h, args.d, args.u, passwd)
    conn = psycopg2.connect(sql)
    cur =  conn.cursor()

    sql = 'SELECT a_id, a_name FROM apps'
    cur.execute(sql)
    apps = cur.fetchall()

    for a_id, a_name in apps:
      sql = 'UPDATE apps SET a_path = %s, a_categories = %s WHERE a_id = %s'
      cur.execute(sql, (args.path + '/' + a_name, ['malware'], a_id))

    conn.commit()

  except Exception as e:
    print e

  finally:
    cur.close()
    conn.close()


if __name__ == '__main__':
  main()

