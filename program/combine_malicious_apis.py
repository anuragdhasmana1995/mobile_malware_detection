import pandas as pd
from androguard.core.bytecodes.apk import APK
from androguard.core.bytecodes.dvm import DalvikVMFormat
from androguard.core.analysis.analysis import Analysis
from androguard.decompiler.decompiler import DecompilerJADX
from androguard.core.androconf import show_logging
import pickle
import os
import re

apis_list = []
final_apis_list = []
count = 0
file_names = []
file_paths = []

def get_apis(path):
  
  application = APK(path)
  application_dex = DalvikVMFormat(application.get_dex())
  application_x = Analysis(application_dex)

  methods = set()
  cs = [cc.get_name() for cc in application_dex.get_classes()]

  for method in application_dex.get_methods():
    g = application_x.get_method(method)

    if method.get_code() == None:
      continue

    for i in g.get_basic_blocks().get():
      for ins in i.get_instructions():
        
        output = ins.get_output()
        match = re.search(r'(L[^;]*;)->[^\(]*\([^\)]*\).*', output)
        if match and match.group(1) not in cs:
          methods.add(match.group())

  methods = list(methods)
  return methods

def refine_apis(apis):
    api_list = []
    for api in apis:
        start_index = api.find('>')
        end_index = api.find('(')
        start_index+=1
        api = api[start_index:end_index] + '()' 
        api_list.append(api)
    
    return api_list

def collect_apis(apis):
    apis = refine_apis(apis)
    row = [0 for x in range(len(final_apis_list))]
    for api in apis:
        index = final_apis_list.index(api)
        row[index] = 1
    return row

with open(r'saved_items\api_calls.pickle' , 'rb') as handle:
	apis_list = pickle.load(handle)

for key in apis_list:
    final_apis_list.append(key[0])

##print((final_apis_list))

df = pd.DataFrame(columns = final_apis_list)


path = 'C:\Users\Anurag\Desktop\Research@MAJOR\malicious_apks\\Agent.apk'
apis = get_apis(path)
row = collect_apis(apis)



for root,dirs,files in os.walk(r'C:\Users\Anurag\Desktop\Research@MAJOR\malicious_apks'):
    file_names.append((files))
    
for f in file_names[0]:
    path = 'C:\Users\Anurag\Desktop\Research@MAJOR\malicious_apks\\' + '\\' + str(f)
    file_paths.append(path)


for path in file_paths:
    print('reading ' + str(count+1) + ' file' , path)
    apis = get_apis(path)
    row = collect_apis(apis)
    df.loc[count] = row
    count+=1

df.to_csv('all_malicious_apis.csv')
