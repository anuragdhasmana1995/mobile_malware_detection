import glob
import errno
import os
from androguard.core.bytecodes.apk import APK
from androguard.core.bytecodes.dvm import DalvikVMFormat
from androguard.core.analysis.analysis import Analysis
from androguard.decompiler.decompiler import DecompilerJADX
from androguard.core.androconf import show_logging
import re
import operator
import pickle

permissions_dict = {}
apis_dict = {}

def get_permissions(path):
	application = APK(path)
	permissions = application.get_permissions()

	permissions = list(set(permissions))
	permissions.sort()

	return permissions

def get_apis(path):
  
  application = APK(path)
  application_dex = DalvikVMFormat(application.get_dex())
  application_x = Analysis(application_dex)

  methods = set()
  cs = [cc.get_name() for cc in application_dex.get_classes()]

  for method in application_dex.get_methods():
    g = application_x.get_method(method)

    if method.get_code() == None:
      continue

    for i in g.get_basic_blocks().get():
      for ins in i.get_instructions():
        
        output = ins.get_output()
        match = re.search(r'(L[^;]*;)->[^\(]*\([^\)]*\).*', output)
        if match and match.group(1) not in cs:
          methods.add(match.group())

  methods = list(methods)
  return methods


def collect_perms(perms):
    for p in perms:
        if p in permissions_dict:
            permissions_dict[str(p)] += 1
        else:
            permissions_dict[str(p)] = 1
               
def refine_apis(apis):
    api_list = []
    for api in apis:
        start_index = api.find('>')
        end_index = api.find('(')
        start_index+=1
        api = api[start_index:end_index] + '()' 
        api_list.append(api)
    
    return api_list

def collect_apis(apis):
    ref_apis = refine_apis(apis)
    for api in ref_apis:
        if api in apis_dict:
            apis_dict[str(api)] += 1
        else:
            apis_dict[str(api)] = 1
    
    
def main():
    file_names = []
    file_paths = []

    #collect_apis(get_apis('C:\Users\Anurag\Desktop\Research@MAJOR\malicious_apks\\Opfake.B.apk'))
    for root,dirs,files in os.walk(r'C:\Users\Anurag\Desktop\Research@MAJOR\malicious_apks'):
        file_names.append((files))
        
    for f in file_names[0]:
        path = 'C:\Users\Anurag\Desktop\Research@MAJOR\malicious_apks\\' + '\\' + str(f)
        file_paths.append(path)
   
    count = 0
    for path in file_paths:
        perms = get_permissions(path)
        collect_perms(perms)
        count+=1
        print('reading ' + str(count) + ' file' , path)
##        apis = get_apis(path)
##        collect_apis(apis)
        
    sorted_permissions_dict = sorted(permissions_dict.items(), key = operator.itemgetter(1) , reverse = True)
    for key , value in sorted_permissions_dict:
        print(key , value)

##    sorted_apis_dict = sorted(apis_dict.items() , key = operator.itemgetter(1) , reverse = True)
##    for key , value in sorted_apis_dict:
##        print(key , value)

    with open('saved_items/permissions.pickle' , 'wb') as handle:
        pickle.dump(sorted_permissions_dict , handle)

##    with open('saved_items/api_calls.pickle' , 'wb') as handle:
##        pickle.dump(sorted_apis_dict , handle)
    

if __name__ == '__main__':
  main()
